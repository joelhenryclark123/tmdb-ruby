=begin
#TMDB API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.51
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for account_add_favorite
  # Add Favorite
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [AccountIdFavoriteBody] :body 
  # @option opts [] :session_id 
  # @return [InlineResponse20029]
  describe 'account_add_favorite test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_add_to_watchlist
  # Add To Watchlist
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [AccountIdWatchlistBody] :body 
  # @option opts [] :session_id 
  # @return [InlineResponse20029]
  describe 'account_add_to_watchlist test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_details
  # Details
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :session_id 
  # @return [InlineResponse20081]
  describe 'account_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_favorite_tv
  # Favorite TV
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20084]
  describe 'account_favorite_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_get_favorites
  # Favorite Movies
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20083]
  describe 'account_get_favorites test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_lists
  # Lists
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @return [InlineResponse20082]
  describe 'account_lists test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_rated_movies
  # Rated Movies
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20085]
  describe 'account_rated_movies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_rated_tv
  # Rated TV
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20086]
  describe 'account_rated_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_rated_tv_episodes
  # Rated TV Episodes
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20087]
  describe 'account_rated_tv_episodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_watchlist_movies
  # Watchlist Movies
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20088]
  describe 'account_watchlist_movies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_watchlist_tv
  # Watchlist TV
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :session_id 
  # @option opts [] :sort_by 
  # @return [InlineResponse20089]
  describe 'account_watchlist_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for alternative_names_copy
  # Images
  # Get the TV network logos by id.
  # @param network_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200117]
  describe 'alternative_names_copy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_create_guest_session
  # Create Guest Session
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20031]
  describe 'authentication_create_guest_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_create_request_token
  # Create Request Token
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20032]
  describe 'authentication_create_request_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_create_session
  # Create Session
  # @param [Hash] opts the optional parameters
  # @option opts [SessionNewBody] :body 
  # @return [InlineResponse20033]
  describe 'authentication_create_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_create_session_from_login
  # Create Session (with login)
  # This method allows an application to validate a request token by entering a username and password.
  # @param [Hash] opts the optional parameters
  # @option opts [TokenValidateWithLoginBody] :body 
  # @return [InlineResponse200121]
  describe 'authentication_create_session_from_login test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_create_session_from_v4_token
  # Create Session (from v4 token)
  # @param [Hash] opts the optional parameters
  # @option opts [Convert4Body] :body 
  # @return [InlineResponse20034]
  describe 'authentication_create_session_from_v4_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_delete_session
  # Delete Session
  # @param [Hash] opts the optional parameters
  # @option opts [AuthenticationSessionBody] :body 
  # @return [InlineResponse20035]
  describe 'authentication_delete_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_validate_key
  # Validate Key
  # Test your API Key to see if it&#x27;s valid.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200119]
  describe 'authentication_validate_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for certification_movie_list
  # Movie Certifications
  # Get an up to date list of the officially supported movie certifications on TMDB.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20090]
  describe 'certification_movie_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for certifications_tv_list
  # TV Certifications
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20091]
  describe 'certifications_tv_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for changes_movie_list
  # Movie List
  # Get a list of all of the movie ids that have been changed in the past 24 hours.
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [InlineResponse20092]
  describe 'changes_movie_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for changes_people_list
  # People List
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [InlineResponse20094]
  describe 'changes_people_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for changes_tv_list
  # TV List
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [InlineResponse20093]
  describe 'changes_tv_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collection_details
  # Details
  # Get collection details by ID.
  # @param collection_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20095]
  describe 'collection_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collection_images
  # Images
  # Get the images that belong to a collection.
  # @param collection_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_image_language specify a comma separated list of ISO-639-1 values to query, for example: &#x60;en,null&#x60;
  # @option opts [] :language 
  # @return [InlineResponse20096]
  describe 'collection_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collection_translations
  # Translations
  # @param collection_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20097]
  describe 'collection_translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_alternative_names
  # Alternative Names
  # Get the company details by ID.
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20099]
  describe 'company_alternative_names test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_details
  # Details
  # Get the company details by ID.
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20098]
  describe 'company_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for company_images
  # Images
  # Get the company logos by id.
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200100]
  describe 'company_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_countries
  # Countries
  # Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [nil]
  describe 'configuration_countries test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_details
  # Details
  # Query the API configuration details.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2007]
  describe 'configuration_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_jobs
  # Jobs
  # Get the list of the jobs and departments we use on TMDB.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configuration_jobs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_languages
  # Languages
  # Get the list of languages (ISO 639-1 tags) used throughout TMDB.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configuration_languages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_primary_translations
  # Primary Translations
  # Get a list of the officially supported translations on TMDB.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configuration_primary_translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_timezones
  # Timezones
  # Get the list of timezones used throughout TMDB.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configuration_timezones test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for credit_details
  # Details
  # Get a movie or TV credit details by ID.
  # @param credit_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200101]
  describe 'credit_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for details_copy
  # Alternative Names
  # Get the alternative names of a network.
  # @param network_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200116]
  describe 'details_copy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for discover_movie
  # Movie
  # Find movies using over 30 filters and sort options.
  # @param [Hash] opts the optional parameters
  # @option opts [] :certification use in conjunction with &#x60;region&#x60;
  # @option opts [] :certification_gte use in conjunction with &#x60;region&#x60;
  # @option opts [] :certification_lte use in conjunction with &#x60;region&#x60;
  # @option opts [] :certification_country use in conjunction with the &#x60;certification&#x60;, &#x60;certification.gte&#x60; and &#x60;certification.lte&#x60; filters
  # @option opts [] :include_adult 
  # @option opts [] :include_video 
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :primary_release_year 
  # @option opts [] :primary_release_date_gte 
  # @option opts [] :primary_release_date_lte 
  # @option opts [] :region 
  # @option opts [] :release_date_gte 
  # @option opts [] :release_date_lte 
  # @option opts [] :sort_by 
  # @option opts [] :vote_average_gte 
  # @option opts [] :vote_average_lte 
  # @option opts [] :vote_count_gte 
  # @option opts [] :vote_count_lte 
  # @option opts [] :watch_region 
  # @option opts [] :with_cast can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_companies can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_crew can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_genres can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_keywords can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_origin_country 
  # @option opts [] :with_original_language 
  # @option opts [] :with_people can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_release_type possible values are: [1, 2, 3, 4, 5, 6] can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query, can be used in conjunction with &#x60;region&#x60;
  # @option opts [] :with_runtime_gte 
  # @option opts [] :with_runtime_lte 
  # @option opts [] :with_watch_monetization_types possible values are: [flatrate, free, ads, rent, buy] use in conjunction with &#x60;watch_region&#x60;, can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_watch_providers use in conjunction with &#x60;watch_region&#x60;, can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :without_companies 
  # @option opts [] :without_genres 
  # @option opts [] :without_keywords 
  # @option opts [] :without_watch_providers 
  # @option opts [] :year 
  # @return [InlineResponse2001]
  describe 'discover_movie test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for discover_tv
  # TV
  # Find TV shows using over 30 filters and sort options.
  # @param [Hash] opts the optional parameters
  # @option opts [] :air_date_gte 
  # @option opts [] :air_date_lte 
  # @option opts [] :first_air_date_year 
  # @option opts [] :first_air_date_gte 
  # @option opts [] :first_air_date_lte 
  # @option opts [] :include_adult 
  # @option opts [] :include_null_first_air_dates 
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :screened_theatrically 
  # @option opts [] :sort_by 
  # @option opts [] :timezone 
  # @option opts [] :vote_average_gte 
  # @option opts [] :vote_average_lte 
  # @option opts [] :vote_count_gte 
  # @option opts [] :vote_count_lte 
  # @option opts [] :watch_region 
  # @option opts [] :with_companies can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_genres can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_keywords can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_networks 
  # @option opts [] :with_origin_country 
  # @option opts [] :with_original_language 
  # @option opts [] :with_runtime_gte 
  # @option opts [] :with_runtime_lte 
  # @option opts [] :with_status possible values are: [0, 1, 2, 3, 4, 5], can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_watch_monetization_types possible values are: [flatrate, free, ads, rent, buy] use in conjunction with &#x60;watch_region&#x60;, can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :with_watch_providers use in conjunction with &#x60;watch_region&#x60;, can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @option opts [] :without_companies 
  # @option opts [] :without_genres 
  # @option opts [] :without_keywords 
  # @option opts [] :without_watch_providers 
  # @option opts [] :with_type possible values are: [0, 1, 2, 3, 4, 5, 6], can be a comma (&#x60;AND&#x60;) or pipe (&#x60;OR&#x60;) separated query
  # @return [InlineResponse20010]
  describe 'discover_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_by_id
  # Find By ID
  # Find data by external ID&#x27;s.
  # @param external_id 
  # @param external_source 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20036]
  describe 'find_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for genre_movie_list
  # Movie List
  # Get the list of official genres for movies.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse200102]
  describe 'genre_movie_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for genre_tv_list
  # TV List
  # Get the list of official genres for TV shows.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse200103]
  describe 'genre_tv_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for guest_session_rated_movies
  # Rated Movies
  # Get the rated movies for a guest session.
  # @param guest_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :sort_by 
  # @return [InlineResponse200104]
  describe 'guest_session_rated_movies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for guest_session_rated_tv
  # Rated TV
  # Get the rated TV shows for a guest session.
  # @param guest_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :sort_by 
  # @return [InlineResponse200105]
  describe 'guest_session_rated_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for guest_session_rated_tv_episodes
  # Rated TV Episodes
  # Get the rated TV episodes for a guest session.
  # @param guest_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :sort_by 
  # @return [InlineResponse200106]
  describe 'guest_session_rated_tv_episodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for keyword_details
  # Details
  # @param keyword_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200109]
  describe 'keyword_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for keyword_movies
  # Movies
  # @param keyword_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_adult 
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse200110]
  describe 'keyword_movies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_add_movie
  # Add Movie
  # Add a movie to a list.
  # @param session_id 
  # @param list_id 
  # @param [Hash] opts the optional parameters
  # @option opts [ListIdAddItemBody] :body 
  # @return [InlineResponse200112]
  describe 'list_add_movie test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_check_item_status
  # Check Item Status
  # Use this method to check if an item has already been added to the list.
  # @param list_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :movie_id 
  # @return [InlineResponse200113]
  describe 'list_check_item_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_clear
  # Clear
  # Clear all items from a list.
  # @param list_id 
  # @param session_id 
  # @param confirm 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200112]
  describe 'list_clear test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_create
  # Create
  # @param session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Model3ListBody] :body 
  # @return [InlineResponse200114]
  describe 'list_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_delete
  # Delete
  # Delete a list.
  # @param list_id 
  # @param session_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200112]
  describe 'list_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_details
  # Details
  # @param list_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse200111]
  describe 'list_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_remove_movie
  # Remove Movie
  # Remove a movie from a list.
  # @param session_id 
  # @param list_id 
  # @param [Hash] opts the optional parameters
  # @option opts [ListIdRemoveItemBody] :body 
  # @return [InlineResponse20030]
  describe 'list_remove_movie test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_account_states
  # Account States
  # Get the rating, watchlist and favourite status of an account.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :session_id 
  # @option opts [] :guest_session_id 
  # @return [InlineResponse20016]
  describe 'movie_account_states test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_add_rating
  # Add Rating
  # Rate a movie and save it to your rated list.
  # @param content_type 
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [MovieIdRatingBody] :body 
  # @option opts [] :guest_session_id 
  # @option opts [] :session_id 
  # @return [InlineResponse20029]
  describe 'movie_add_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_alternative_titles
  # Alternative Titles
  # Get the alternative titles for a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :country specify a ISO-3166-1 value to filter the results
  # @return [InlineResponse20018]
  describe 'movie_alternative_titles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_changes
  # Changes
  # Get the recent changes for a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [nil]
  describe 'movie_changes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_credits
  # Credits
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20019]
  describe 'movie_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_delete_rating
  # Delete Rating
  # Delete a user rating.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :content_type 
  # @option opts [] :guest_session_id 
  # @option opts [] :session_id 
  # @return [InlineResponse20030]
  describe 'movie_delete_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_details
  # Details
  # Get the top level details of a movie by ID.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :append_to_response comma separated list of endpoints within this namespace, 20 items max
  # @option opts [] :language 
  # @return [InlineResponse2002]
  describe 'movie_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_external_ids
  # External IDs
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20020]
  describe 'movie_external_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_images
  # Images
  # Get the images that belong to a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_image_language specify a comma separated list of ISO-639-1 values to query, for example: &#x60;en,null&#x60;
  # @option opts [] :language 
  # @return [InlineResponse20011]
  describe 'movie_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_keywords
  # Keywords
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20021]
  describe 'movie_keywords test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_latest_id
  # Latest
  # Get the newest movie ID.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20055]
  describe 'movie_latest_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_lists
  # Lists
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20022]
  describe 'movie_lists test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_now_playing_list
  # Now Playing
  # Get a list of movies that are currently in theatres.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :region ISO-3166-1 code
  # @return [InlineResponse20050]
  describe 'movie_now_playing_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_popular_list
  # Popular
  # Get a list of movies ordered by popularity.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :region ISO-3166-1 code
  # @return [InlineResponse20047]
  describe 'movie_popular_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_recommendations
  # Recommendations
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [nil]
  describe 'movie_recommendations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_release_dates
  # Release Dates
  # Get the release dates and certifications for a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20023]
  describe 'movie_release_dates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_reviews
  # Reviews
  # Get the user reviews for a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20024]
  describe 'movie_reviews test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_similar
  # Similar
  # Get the similar movies based on genres and keywords.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20025]
  describe 'movie_similar test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_top_rated_list
  # Top Rated
  # Get a list of movies ordered by rating.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :region ISO-3166-1 code
  # @return [InlineResponse20048]
  describe 'movie_top_rated_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_translations
  # Translations
  # Get the translations for a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20026]
  describe 'movie_translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_upcoming_list
  # Upcoming
  # Get a list of movies that are being released soon.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :region ISO-3166-1 code
  # @return [InlineResponse20049]
  describe 'movie_upcoming_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_videos
  # Videos
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20027]
  describe 'movie_videos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for movie_watch_providers
  # Watch Providers
  # Get the list of streaming providers we have for a movie.
  # @param movie_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20028]
  describe 'movie_watch_providers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for network_details
  # Details
  # @param network_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200115]
  describe 'network_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_changes
  # Changes
  # Get the recent changes for a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [InlineResponse20038]
  describe 'person_changes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_combined_credits
  # Combined Credits
  # Get the combined movie and TV credits that belong to a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20042]
  describe 'person_combined_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_details
  # Details
  # Query the top level details of a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :append_to_response comma separated list of endpoints within this namespace, 20 items max
  # @option opts [] :language 
  # @return [InlineResponse20037]
  describe 'person_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_external_ids
  # External IDs
  # Get the external ID&#x27;s that belong to a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20043]
  describe 'person_external_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_images
  # Images
  # Get the profile images that belong to a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'person_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_latest_id
  # Latest
  # Get the newest created person. This is a live response and will continuously change.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200122]
  describe 'person_latest_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_movie_credits
  # Movie Credits
  # Get the movie credits for a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20040]
  describe 'person_movie_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_popular_list
  # Popular
  # Get a list of people ordered by popularity.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20046]
  describe 'person_popular_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_tagged_images
  # Tagged Images
  # Get the tagged images for a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :page 
  # @return [InlineResponse20044]
  describe 'person_tagged_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for person_tv_credits
  # TV Credits
  # Get the TV credits that belong to a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20041]
  describe 'person_tv_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for review_details
  # Details
  # Retrieve the details of a movie or TV show review.
  # @param review_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200118]
  describe 'review_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_collection
  # Collection
  # Search for collections by their original, translated and alternative names.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_adult 
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :region 
  # @return [InlineResponse200126]
  describe 'search_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_company
  # Company
  # Search for companies by their original and alternative names.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :page 
  # @return [InlineResponse200125]
  describe 'search_company test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_keyword
  # Keyword
  # Search for keywords by their name.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :page 
  # @return [InlineResponse200127]
  describe 'search_keyword test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_movie
  # Movie
  # Search for movies by their original, translated and alternative titles.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_adult 
  # @option opts [] :language 
  # @option opts [] :primary_release_year 
  # @option opts [] :page 
  # @option opts [] :region 
  # @option opts [] :year 
  # @return [InlineResponse200]
  describe 'search_movie test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_multi
  # Multi
  # Use multi search when you want to search for movies, TV shows and people in a single request.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_adult 
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse2005]
  describe 'search_multi test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_person
  # Person
  # Search for people by their name and also known as names.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_adult 
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse2006]
  describe 'search_person test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_tv
  # TV
  # Search for TV shows by their original, translated and also known as names.
  # @param query 
  # @param [Hash] opts the optional parameters
  # @option opts [] :first_air_date_year 
  # @option opts [] :include_adult 
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :year 
  # @return [InlineResponse2004]
  describe 'search_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for translations
  # Translations
  # Get the translations that belong to a person.
  # @param person_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20045]
  describe 'translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trending_all
  # All
  # Get the trending movies, TV shows and people.
  # @param time_window 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language &#x60;ISO-639-1&#x60;-&#x60;ISO-3166-1&#x60; code
  # @return [InlineResponse20014]
  describe 'trending_all test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trending_movies
  # Movies
  # Get the trending movies on TMDB.
  # @param time_window 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language &#x60;ISO-639-1&#x60;-&#x60;ISO-3166-1&#x60; code
  # @return [InlineResponse20014]
  describe 'trending_movies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trending_people
  # People
  # Get the trending people on TMDB.
  # @param time_window 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language &#x60;ISO-639-1&#x60;-&#x60;ISO-3166-1&#x60; code
  # @return [InlineResponse20017]
  describe 'trending_people test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trending_tv
  # TV
  # Get the trending TV shows on TMDB.
  # @param time_window 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language &#x60;ISO-639-1&#x60;-&#x60;ISO-3166-1&#x60; code
  # @return [InlineResponse20015]
  describe 'trending_tv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_account_states
  # Account States
  # Get the rating, watchlist and favourite status.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :session_id 
  # @option opts [] :guest_session_id 
  # @return [InlineResponse20016]
  describe 'tv_episode_account_states test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_add_rating
  # Add Rating
  # Rate a TV episode and save it to your rated list.
  # @param content_type 
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [EpisodeNumberRatingBody] :body 
  # @option opts [] :guest_session_id 
  # @option opts [] :session_id 
  # @return [InlineResponse20029]
  describe 'tv_episode_add_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_changes_by_id
  # Changes
  # Get the recent changes for a TV episode.
  # @param episode_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200123]
  describe 'tv_episode_changes_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_credits
  # Credits
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20078]
  describe 'tv_episode_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_delete_rating
  # Delete Rating
  # Delete your rating on a TV episode.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :content_type 
  # @option opts [] :guest_session_id 
  # @option opts [] :session_id 
  # @return [InlineResponse20030]
  describe 'tv_episode_delete_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_details
  # Details
  # Query the details of a TV episode.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :append_to_response comma separated list of endpoints within this namespace, 20 items max
  # @option opts [] :language 
  # @return [InlineResponse2009]
  describe 'tv_episode_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_external_ids
  # External IDs
  # Get a list of external IDs that have been added to a TV episode.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20079]
  describe 'tv_episode_external_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_group_details
  # Details
  # Get the details of a TV episode group.
  # @param tv_episode_group_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200124]
  describe 'tv_episode_group_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_images
  # Images
  # Get the images that belong to a TV episode.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_image_language specify a comma separated list of ISO-639-1 values to query, for example: &#x60;en,null&#x60;
  # @option opts [] :language 
  # @return [InlineResponse20013]
  describe 'tv_episode_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_translations
  # Translations
  # Get the translations that have been added to a TV episode.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20080]
  describe 'tv_episode_translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_episode_videos
  # Videos
  # Get the videos that belong to a TV episode.
  # @param series_id 
  # @param season_number 
  # @param episode_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_video_language filter the list results by language, supports more than one value by using a comma
  # @option opts [] :language 
  # @return [InlineResponse20077]
  describe 'tv_episode_videos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_account_states
  # Account States
  # Get the rating, watchlist and favourite status.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :session_id 
  # @option opts [] :guest_session_id 
  # @return [InlineResponse20071]
  describe 'tv_season_account_states test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_aggregate_credits
  # Aggregate Credits
  # Get the aggregate credits (cast and crew) that have been added to a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20072]
  describe 'tv_season_aggregate_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_changes_by_id
  # Changes
  # Get the recent changes for a TV season.
  # @param season_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [InlineResponse20073]
  describe 'tv_season_changes_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_credits
  # Credits
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20074]
  describe 'tv_season_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_details
  # Details
  # Query the details of a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :append_to_response comma separated list of endpoints within this namespace, 20 items max
  # @option opts [] :language 
  # @return [InlineResponse2008]
  describe 'tv_season_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_external_ids
  # External IDs
  # Get a list of external IDs that have been added to a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20075]
  describe 'tv_season_external_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_images
  # Images
  # Get the images that belong to a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_image_language specify a comma separated list of ISO-639-1 values to query, for example: &#x60;en,null&#x60;
  # @option opts [] :language 
  # @return [InlineResponse20012]
  describe 'tv_season_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_translations
  # Translations
  # Get the translations for a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20076]
  describe 'tv_season_translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_videos
  # Videos
  # Get the videos that belong to a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_video_language filter the list results by language, supports more than one value by using a comma
  # @option opts [] :language 
  # @return [InlineResponse20077]
  describe 'tv_season_videos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_season_watch_providers
  # Watch Providers
  # Get the list of streaming providers we have for a TV season.
  # @param series_id 
  # @param season_number 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse200120]
  describe 'tv_season_watch_providers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_account_states
  # Account States
  # Get the rating, watchlist and favourite status.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :session_id 
  # @option opts [] :guest_session_id 
  # @return [InlineResponse20016]
  describe 'tv_series_account_states test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_add_rating
  # Add Rating
  # Rate a TV show and save it to your rated list.
  # @param content_type 
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SeriesIdRatingBody] :body 
  # @option opts [] :guest_session_id 
  # @option opts [] :session_id 
  # @return [InlineResponse20029]
  describe 'tv_series_add_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_aggregate_credits
  # Aggregate Credits
  # Get the aggregate credits (cast and crew) that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20057]
  describe 'tv_series_aggregate_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_airing_today_list
  # Airing Today
  # Get a list of TV shows airing today.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :timezone 
  # @return [InlineResponse20051]
  describe 'tv_series_airing_today_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_alternative_titles
  # Alternative Titles
  # Get the alternative titles that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20058]
  describe 'tv_series_alternative_titles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_changes
  # Changes
  # Get the recent changes for a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :end_date 
  # @option opts [] :page 
  # @option opts [] :start_date 
  # @return [InlineResponse20039]
  describe 'tv_series_changes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_content_ratings
  # Content Ratings
  # Get the content ratings that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20059]
  describe 'tv_series_content_ratings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_credits
  # Credits
  # Get the latest season credits of a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse20060]
  describe 'tv_series_credits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_delete_rating
  # Delete Rating
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :content_type 
  # @option opts [] :guest_session_id 
  # @option opts [] :session_id 
  # @return [InlineResponse20030]
  describe 'tv_series_delete_rating test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_details
  # Details
  # Get the details of a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :append_to_response comma separated list of endpoints within this namespace, 20 items max
  # @option opts [] :language 
  # @return [InlineResponse2003]
  describe 'tv_series_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_episode_groups
  # Episode Groups
  # Get the episode groups that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20061]
  describe 'tv_series_episode_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_external_ids
  # External IDs
  # Get a list of external IDs that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20062]
  describe 'tv_series_external_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_images
  # Images
  # Get the images that belong to a TV series.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_image_language specify a comma separated list of ISO-639-1 values to query, for example: &#x60;en,null&#x60;
  # @option opts [] :language 
  # @return [InlineResponse20011]
  describe 'tv_series_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_keywords
  # Keywords
  # Get a list of keywords that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20063]
  describe 'tv_series_keywords test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_latest_id
  # Latest
  # Get the newest TV show ID.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20056]
  describe 'tv_series_latest_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_on_the_air_list
  # On The Air
  # Get a list of TV shows that air in the next 7 days.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @option opts [] :timezone 
  # @return [InlineResponse20052]
  describe 'tv_series_on_the_air_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_popular_list
  # Popular
  # Get a list of TV shows ordered by popularity.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20053]
  describe 'tv_series_popular_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_recommendations
  # Recommendations
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20064]
  describe 'tv_series_recommendations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_reviews
  # Reviews
  # Get the reviews that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20065]
  describe 'tv_series_reviews test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_screened_theatrically
  # Screened Theatrically
  # Get the seasons and episodes that have screened theatrically.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20066]
  describe 'tv_series_screened_theatrically test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_similar
  # Similar
  # Get the similar TV shows.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20067]
  describe 'tv_series_similar test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_top_rated_list
  # Top Rated
  # Get a list of TV shows ordered by rating.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :page 
  # @return [InlineResponse20054]
  describe 'tv_series_top_rated_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_translations
  # Translations
  # Get the translations that have been added to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20068]
  describe 'tv_series_translations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_videos
  # Videos
  # Get the videos that belong to a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @option opts [] :include_video_language filter the list results by language, supports more than one value by using a comma
  # @option opts [] :language 
  # @return [InlineResponse20069]
  describe 'tv_series_videos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tv_series_watch_providers
  # Watch Providers
  # Get the list of streaming providers we have for a TV show.
  # @param series_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20070]
  describe 'tv_series_watch_providers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for watch_provider_tv_list
  # TV Providers
  # Get the list of streaming providers we have for TV shows.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :watch_region 
  # @return [InlineResponse200108]
  describe 'watch_provider_tv_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for watch_providers_available_regions
  # Available Regions
  # Get the list of the countries we have watch provider (OTT/streaming) data for.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @return [InlineResponse200107]
  describe 'watch_providers_available_regions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for watch_providers_movie_list
  # Movie Providers
  # Get the list of streaming providers we have for movies.
  # @param [Hash] opts the optional parameters
  # @option opts [] :language 
  # @option opts [] :watch_region 
  # @return [InlineResponse200108]
  describe 'watch_providers_movie_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
